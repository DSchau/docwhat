# Name of the property. You can have multiple properties with completely
# different config blocks for different sections of your site.
# For example, you can have one property to handle comment submission and
# another one to handle posts.
comments:
  # (*) REQUIRED
  #
  # Names of the fields the form is allowed to submit. If a field that is
  # not here is part of the request, an error will be thrown.
  allowedFields: ["name", "email", "url", "message"]

  # (*) REQUIRED
  #
  # Name of the branch being used. Must match the one sent in the URL of the
  # request.
  branch: "master"

  # (*) REQUIRED
  #
  # Destination path (filename) for the data files. Accepts placeholders.
  filename: "entry{@timestamp}"

  # (*) REQUIRED
  #
  # Destination path (directory) for the data files. Accepts placeholders.
  path: "_data/comments/{options.slug}"

  # The format of the generated data files. Accepted values are "json", "yaml"
  # or "frontmatter"
  format: "yaml"

  # List of fields to be populated automatically by Staticman and included in
  # the data file. Keys are the name of the field. The value can be an object
  # with a `type` property, which configures the generated field, or any value
  # to be used directly (e.g. a string, number or array)
  generatedFields:
    date:
      type: date
      options:
        format: "timestamp-seconds"

  # Whether entries need to be appproved before they are published to the main
  # branch. If set to `true`, a pull request will be created for your
  # approval. Otherwise, entries will be published to the main branch
  # automatically.
  moderation: true

  # Name of the site. Used in notification emails.
  name: "docwhat.org"

  # Notification settings. When enabled, users can choose to receive
  # notifications via email when someone adds a reply or a new comment. This
  # requires an account
  # with Mailgun, which you can get for free at http://mailgun.com.
  notifications:
    # Enable notifications
    enabled: true

    # üîê RSA encrypted field
    #
    # Mailgun API key
    apiKey: "ov1/3hO1caU+6Dp5jfOayTbM/hNPz8tLFq4onKdL8FyH9ic5hA6zttok3kldmRe2RnPal1B+lLgrWSI5jTuyDCh8iSp0ivp67QCTzxKV7d+KfWyKFJigiFgSaCQyjSfLT5q+zBqWycid0AswZeb+jFoBmP59sQcywUQ9caibCgo="

    # üîê RSA encrypted field
    #
    # Mailgun domain (encrypted)
    domain: "nLwmzi7ibBzeswoy/9xcvI041ZTpxVIaw2g1WOs/6bKkoGq/rCF8ssmw0SZ52MmnJVXLZWIBTOxv84ovG+vGnMsFXIW9HEJBTV4LRYo9VOlvx2E7vwur67QGY2zkwN6zQcNYnLMenqtR8VK1t5gutqAdKMwUEy+znBzP7RLjMsg="

  # Names of required fields. If any of these isn't in the request or is
  # empty, an error will be thrown.
  requiredFields: ["name", "email", "message"]

  # akismet:
  #   # Whether to use Akismet to check entries for spam. This requires an
  #   # Akismet account to be configured in the Staticman API instance being
  #   # used.
  #   enabled: true

  #   # Name of the field to be used as the entry‚Äôs author in Akistmet
  #   author: "name"

  #   # Name of the field to be used as the entry‚Äôs author‚Äôs email in Akistmet
  #   authorEmail: "email"

  #   # Name of the field to be used as the entry‚Äôs author‚Äôs URL in Akistmet
  #   authorUrl: "url"

  #   # Name of the field to be used as the entry‚Äôs body in Akistmet
  #   content: "message"

  #   # Type of entry to be sent to Akismet
  #   type: "comment"

  # List of transformations to apply to any of the fields supplied. Keys are
  # the name of the field and values are possible transformation types.
  transforms:
    email: md5

  reCaptcha:
    # Set to true to force reCAPTCHA validation, set to false to accept
    # comments without reCAPTCHA.
    enabled: true

    # Site Key for your reCAPTCHA site registration
    siteKey: "6LeIP0oUAAAAANRB2QX0a3ItZkkiBJsmEs9pel4P"

    # üîê RSA encrypted field
    #
    # Encrypted Secret for your reCAPTCHA site registration
    secret: "cZU2NrPL+mlqy13La6fsGGNqOljXD2Cc6AWxggth9bSx6wOWCYW1zy/3nd47rQG6dMfmVKVk/2vLoyNo3H7J3jCTCfX/eW5/zGUZ8Cx1e52BhwdIpDujGIQdtrnJ4Smx/CdhS5yoh4FBIuScKjYNT/GCV/WywrXiNZXrp8GOe9Q="
